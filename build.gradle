buildscript {
    ext {
        assetPipelineVersion = "2.7.2"
        jobDslVersion = "1.50"
        gradleDockerVersion = "3.0.2"
    }
    repositories {
        maven { url "http://oss.jfrog.org/artifactory/repo" }
        jcenter()
    }
    dependencies {
        classpath 'io.ratpack:ratpack-gradle:1.2.0'
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.2"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
        classpath "com.bertramlabs.plugins:less-asset-pipeline:${assetPipelineVersion}"
        classpath "com.bmuschko:gradle-docker-plugin:${gradleDockerVersion}"
    }
}

// The “ratpack” plugin applies the “application” plugin, making it easy to create a standalone application.
// See: http://gradle.org/docs/current/userguide/application_plugin.html
apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "asset-pipeline"
// docker
apply plugin: 'com.bmuschko.docker-java-application'


// The “ratpack” plugin is IDEA aware.
// It will create a run configuration in IDEA to launch your app in your IDE, with hot reloading.
apply plugin: "idea"
idea {
    project {
        jdkName "1.8"
        languageLevel "1.8"
        ipr {
            withXml { provider ->
                def node = provider.asNode()
                //configure git support for the project in idea
                node.component.find { it.'@name' == 'VcsDirectoryMappings' }?.mapping[0].'@vcs' = 'Git'
            }
        }
    }
}

apply plugin: "eclipse"

repositories {
  maven { url "http://oss.jfrog.org/artifactory/repo" }
  jcenter()
  maven { url "http://repo.springsource.org/repo" } // for springloaded
  maven { url "http://repo.jenkins-ci.org/releases/" }
}

configurations.all {
    exclude module: "groovy"
}

dependencies {
    // Default SLF4J binding. Note that this is a blocking implementation.
    // See here for a non blocking appender http://logging.apache.org/log4j/2.x/manual/async.html
    runtime 'org.slf4j:slf4j-simple:1.7.7'
    compile "org.jenkins-ci.plugins:job-dsl-core:${jobDslVersion}"

    compile "com.bertramlabs.plugins:ratpack-asset-pipeline:${assetPipelineVersion}"
    runtime "com.bertramlabs.plugins:less-asset-pipeline:${assetPipelineVersion}"

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
}

shadowJar {
    manifest {
        attributes 'Implementation-Version': jobDslVersion
    }
}

task stage {
    dependsOn shadowJar
}

// docker build -t ratpack-sample/job-dsl-playground:1.0 ./build/docker/
// docker run -d --name job-dsl-playground -p 80:5050 ratpack-sample/job-dsl-playground:1.0
docker {
    url = project.hasProperty('dockerUrl') ?
                project.getProperty('dockerUrl') :
                System.env.DOCKER_HOST.replace('tcp', 'http')
 
    // Configuration for Java application image.
    javaApplication {
        baseImage = 'openjdk:8-jre'
        maintainer = 'manboubird'
        port = 5050
        tag = 'ratpack-sample/job-dsl-playground:1.0'
    }
}
